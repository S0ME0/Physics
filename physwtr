public class RealisticWaterBlock extends BlockWater {
 
    // Water properties
    private final float density = 1000f;
    private final float viscosity = 0.8f;
    private final float surfaceTension = 0.05f;
    private final float dragCoefficient = 0.2f;
    private final float flowSpeed = 0.1f;
    private final Vector3d flowDirection = new Vector3d(1, 0, 1).normalize();
 
    public RealisticWaterBlock(Settings settings) {
        super(settings);
    }
 
    @Override
    public void onEntityCollision(BlockState state, World world, BlockPos pos, Entity entity) {
        if (entity instanceof LivingEntity) {
            // Apply buoyancy force
            Vector3d force = new Vector3d(0, density * 9.81, 0);
            entity.addVelocity(force.x, force.y, force.z);
 
            // Apply drag force
            Vector3d velocity = entity.getVelocity();
            double speed = velocity.length();
            Vector3d drag = velocity.normalize().multiply(-dragCoefficient * density * speed * speed);
            entity.addVelocity(drag.x, drag.y, drag.z);
 
            // Apply surface tension
            Vector3d normal = new Vector3d(0, 1, 0);
            Vector3d surfaceVelocity = velocity.subtract(normal.multiply(velocity.dotProduct(normal)));
            Vector3d surfaceForce = surfaceVelocity.multiply(-surfaceTension);
            entity.addVelocity(surfaceForce.x, surfaceForce.y, surfaceForce.z);
 
            // Apply viscosity
            double area = 1.0;
            Vector3d shearForce = velocity.multiply(-viscosity * area * speed);
            entity.addVelocity(shearForce.x, shearForce.y, shearForce.z);
 
            // Apply water flow
            Vector3d blockPosition = new Vector3d(pos.getX() + 0.5, pos.getY() + 0.5, pos.getZ() + 0.5);
            Vector3d entityPosition = entity.getPositionVec();
            Vector3d offset = entityPosition.subtract(blockPosition);
            Vector3d flowVelocity = flowDirection.multiply(offset.dotProduct(flowDirection)).multiply(flowSpeed);
            entity.addVelocity(flowVelocity.x, flowVelocity.y, flowVelocity.z);
 
            // Add particle effects for water splashes and ripples
            world.addParticle(ParticleTypes.WATER_SPLASH, entity.getPosX(), entity.getPosY(), entity.getPosZ(), velocity.x, velocity.y, velocity.z);
            world.addParticle(ParticleTypes.BUBBLE, entity.getPosX(), entity.getPosY(), entity.getPosZ(), velocity.x, velocity.y, velocity.z);
            world.addParticle(ParticleTypes.WATER_BUBBLE, entity.getPosX(), entity.getPosY(), entity.getPosZ(), velocity.x,
            
            public class RealisticWaterBlock extends BlockWater {

    
